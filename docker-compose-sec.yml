name: edgex
services:
  database:
    container_name: postgres
    depends_on:
      security-bootstrapper:
        condition: service_started
        required: true
      security-secretstore-setup:
        condition: service_started
        required: true
    entrypoint:
      - /edgex-init/postgres_wait_install.sh
    environment:
      CLIENTS_SECURITY_SECRETSTORE_SETUP_HOST: security-secretstore-setup
      DATABASECONFIG_NAME: create-users.sh
      DATABASECONFIG_PATH: /tmp/postgres-init-scripts
      EDGEX_SECURITY_SECRET_STORE: "true"
      POSTGRES_DB: edgex_db
      PROXY_SETUP_HOST: security-proxy-setup
      SECRETSTORE_HOST: secret-store
      STAGEGATE_BOOTSTRAPPER_HOST: security-bootstrapper
      STAGEGATE_BOOTSTRAPPER_STARTPORT: "54321"
      STAGEGATE_DATABASE_HOST: postgres
      STAGEGATE_DATABASE_PORT: "5432"
      STAGEGATE_DATABASE_READYPORT: "5432"
      STAGEGATE_PROXYSETUP_READYPORT: "54325"
      STAGEGATE_READY_TORUNPORT: "54329"
      STAGEGATE_REGISTRY_HOST: core-keeper
      STAGEGATE_REGISTRY_PORT: "59890"
      STAGEGATE_REGISTRY_READYPORT: "54324"
      STAGEGATE_SECRETSTORESETUP_HOST: security-secretstore-setup
      STAGEGATE_SECRETSTORESETUP_TOKENS_READYPORT: "54322"
      STAGEGATE_WAITFOR_TIMEOUT: 60s
    hostname: postgres
    image: postgres:16.3-alpine3.20
    networks:
      edgex-network: null
    ports:
      - mode: ingress
        host_ip: 127.0.0.1
        target: 5432
        published: "5432"
        protocol: tcp
    read_only: true
    restart: always
    security_opt:
      - no-new-privileges:true
    tmpfs:
      - /run
      - /tmp
    volumes:
      - type: bind
        source: /etc/localtime
        target: /etc/localtime
        read_only: true
        bind:
          create_host_path: true
      - type: volume
        source: edgex-init
        target: /edgex-init
        read_only: true
        volume: {}
      - type: volume
        source: db-data
        target: /var/lib/postgresql/data
        volume: {}
      - type: bind
        source: /tmp/edgex/secrets/security-bootstrapper-postgres
        target: /tmp/edgex/secrets/security-bootstrapper-postgres
        read_only: true
        bind:
          selinux: z
          create_host_path: true
  mqtt-broker:
    command:
      - /usr/sbin/mosquitto
      - -c
      - /mosquitto/config/mosquitto.conf
    container_name: edgex-mqtt-broker
    depends_on:
      security-bootstrapper:
        condition: service_started
        required: true
      security-secretstore-setup:
        condition: service_started
        required: true
    entrypoint:
      - /edgex-init/messagebus_wait_install.sh
    environment:
      BROKER_TYPE: mosquitto
      CLIENTS_SECURITY_SECRETSTORE_SETUP_HOST: security-secretstore-setup
      CONF_DIR: /edgex-init/bootstrap-mosquitto/res
      EDGEX_SECURITY_SECRET_STORE: "true"
      ENTRYPOINT: /docker-entrypoint.sh /usr/sbin/mosquitto  -c  /mosquitto/config/mosquitto.conf
      PROXY_SETUP_HOST: security-proxy-setup
      SECRETSTORE_HOST: secret-store
      STAGEGATE_BOOTSTRAPPER_HOST: security-bootstrapper
      STAGEGATE_BOOTSTRAPPER_STARTPORT: "54321"
      STAGEGATE_DATABASE_HOST: postgres
      STAGEGATE_DATABASE_PORT: "5432"
      STAGEGATE_DATABASE_READYPORT: "5432"
      STAGEGATE_PROXYSETUP_READYPORT: "54325"
      STAGEGATE_READY_TORUNPORT: "54329"
      STAGEGATE_REGISTRY_HOST: core-keeper
      STAGEGATE_REGISTRY_PORT: "59890"
      STAGEGATE_REGISTRY_READYPORT: "54324"
      STAGEGATE_SECRETSTORESETUP_HOST: security-secretstore-setup
      STAGEGATE_SECRETSTORESETUP_TOKENS_READYPORT: "54322"
      STAGEGATE_WAITFOR_TIMEOUT: 60s
    hostname: edgex-mqtt-broker
    image: domain:5000/eclipse-mosquitto:2.0.21
    networks:
      edgex-network: null
    ports:
      - mode: ingress
        host_ip: 127.0.0.1
        target: 1883
        published: "1883"
        protocol: tcp
    read_only: true
    restart: always
    security_opt:
      - no-new-privileges:true
    user: root:root
    volumes:
      - type: volume
        source: mqtt
        target: /mosquitto
        volume: {}
      - type: volume
        source: edgex-init
        target: /edgex-init
        read_only: true
        volume: {}
      - type: bind
        source: /tmp/edgex/secrets/security-bootstrapper-messagebus
        target: /tmp/edgex/secrets/security-bootstrapper-messagebus
        read_only: true
        bind:
          selinux: z
          create_host_path: true
  nginx:
    command:
      - /docker-entrypoint.sh
      - nginx
      - -g
      - daemon off;
    container_name: edgex-nginx
    depends_on:
      security-secretstore-setup:
        condition: service_started
        required: true
    entrypoint:
      - /bin/sh
      - /edgex-init/nginx_wait_install.sh
    environment:
      PROXY_SETUP_HOST: security-proxy-setup
      STAGEGATE_BOOTSTRAPPER_HOST: security-bootstrapper
      STAGEGATE_BOOTSTRAPPER_STARTPORT: "54321"
      STAGEGATE_DATABASE_HOST: postgres
      STAGEGATE_DATABASE_PORT: "5432"
      STAGEGATE_DATABASE_READYPORT: "5432"
      STAGEGATE_PROXYSETUP_READYPORT: "54325"
      STAGEGATE_READY_TORUNPORT: "54329"
      STAGEGATE_REGISTRY_HOST: core-keeper
      STAGEGATE_REGISTRY_PORT: "59890"
      STAGEGATE_REGISTRY_READYPORT: "54324"
      STAGEGATE_SECRETSTORESETUP_HOST: security-secretstore-setup
      STAGEGATE_SECRETSTORESETUP_TOKENS_READYPORT: "54322"
      STAGEGATE_WAITFOR_TIMEOUT: 60s
    hostname: edgex-nginx
    image: domain:5000/nginx:1.25.5-alpine-slim
    networks:
      edgex-network: null
    ports:
      - mode: ingress
        target: 8443
        published: "8443"
        protocol: tcp
    read_only: true
    restart: always
    security_opt:
      - no-new-privileges:true
    tmpfs:
      - /etc/nginx/conf.d
      - /var/cache/nginx
      - /var/log/nginx
      - /var/run
    volumes:
      - type: volume
        source: edgex-init
        target: /edgex-init
        read_only: true
        volume: {}
      - type: volume
        source: nginx-templates
        target: /etc/nginx/templates
        volume: {}
      - type: volume
        source: nginx-tls
        target: /etc/ssl/nginx
        volume: {}
  secret-store:
    command:
      - server
    container_name: secret-store
    depends_on:
      security-bootstrapper:
        condition: service_started
        required: true
    deploy:
      resources:
        limits:
          memory: "4190168416256"
    entrypoint:
      - /edgex-init/secretstore_wait_install.sh
    environment:
      BAO_ADDR: http://secret-store:8200
      BAO_CONFIG_DIR: /openbao/config
      BAO_LOCAL_CONFIG: "listener \"tcp\" { \n  address = \"secret-store:8200\" \n  tls_disable = \"1\" \n  cluster_address = \"secret-store:8201\" \n} \nbackend \"file\" {\n  path = \"/openbao/file\"\n}\ndefault_lease_ttl = \"168h\" \nmax_lease_ttl = \"720h\"\ndisable_mlock = true\n"
      PROXY_SETUP_HOST: security-proxy-setup
      SKIP_SETCAP: "true"
      STAGEGATE_BOOTSTRAPPER_HOST: security-bootstrapper
      STAGEGATE_BOOTSTRAPPER_STARTPORT: "54321"
      STAGEGATE_DATABASE_HOST: postgres
      STAGEGATE_DATABASE_PORT: "5432"
      STAGEGATE_DATABASE_READYPORT: "5432"
      STAGEGATE_PROXYSETUP_READYPORT: "54325"
      STAGEGATE_READY_TORUNPORT: "54329"
      STAGEGATE_REGISTRY_HOST: core-keeper
      STAGEGATE_REGISTRY_PORT: "59890"
      STAGEGATE_REGISTRY_READYPORT: "54324"
      STAGEGATE_SECRETSTORESETUP_HOST: security-secretstore-setup
      STAGEGATE_SECRETSTORESETUP_TOKENS_READYPORT: "54322"
      STAGEGATE_WAITFOR_TIMEOUT: 60s
    hostname: secret-store
    image: domain:5000/openbao/openbao:2.2
    memswap_limit: "4190168416256"
    networks:
      edgex-network: null
    ports:
      - mode: ingress
        host_ip: 127.0.0.1
        target: 8200
        published: "8200"
        protocol: tcp
    restart: always
    tmpfs:
      - /openbao/config
    user: root:root
    volumes:
      - type: volume
        source: edgex-init
        target: /edgex-init
        read_only: true
        volume: {}
      - type: volume
        source: secret-store-file
        target: /openbao/file
        volume: {}
      - type: volume
        source: secret-store-logs
        target: /openbao/logs
        volume: {}
  security-bootstrapper:
    container_name: security-bootstrapper
    environment:
      EDGEX_GROUP: "2001"
      EDGEX_USER: "2002"
      PROXY_SETUP_HOST: security-proxy-setup
      STAGEGATE_BOOTSTRAPPER_HOST: security-bootstrapper
      STAGEGATE_BOOTSTRAPPER_STARTPORT: "54321"
      STAGEGATE_DATABASE_HOST: postgres
      STAGEGATE_DATABASE_PORT: "5432"
      STAGEGATE_DATABASE_READYPORT: "5432"
      STAGEGATE_PROXYSETUP_READYPORT: "54325"
      STAGEGATE_READY_TORUNPORT: "54329"
      STAGEGATE_REGISTRY_HOST: core-keeper
      STAGEGATE_REGISTRY_PORT: "59890"
      STAGEGATE_REGISTRY_READYPORT: "54324"
      STAGEGATE_SECRETSTORESETUP_HOST: security-secretstore-setup
      STAGEGATE_SECRETSTORESETUP_TOKENS_READYPORT: "54322"
      STAGEGATE_WAITFOR_TIMEOUT: 60s
    hostname: security-bootstrapper
    image: domain:5000/edgexfoundry/security-bootstrapper:4.0.0
    networks:
      edgex-network: null
    read_only: true
    restart: always
    security_opt:
      - no-new-privileges:true
    user: root:root
    volumes:
      - type: bind
        source: /etc/localtime
        target: /etc/localtime
        read_only: true
        bind:
          create_host_path: true
      - type: volume
        source: edgex-init
        target: /edgex-init
        volume: {}
  security-proxy-setup:
    container_name: security-proxy-setup
    depends_on:
      security-bootstrapper:
        condition: service_started
        required: true
      security-secretstore-setup:
        condition: service_started
        required: true
    entrypoint:
      - /edgex-init/proxy_setup_wait_install.sh
    environment:
      CLIENTS_SECURITY_SECRETSTORE_SETUP_HOST: security-secretstore-setup
      EDGEX_ADD_PROXY_ROUTE: device-rest.http://edgex-device-rest:59986
      EDGEX_SECURITY_SECRET_STORE: "true"
      PROXY_SETUP_HOST: security-proxy-setup
      SECRETSTORE_HOST: secret-store
      STAGEGATE_BOOTSTRAPPER_HOST: security-bootstrapper
      STAGEGATE_BOOTSTRAPPER_STARTPORT: "54321"
      STAGEGATE_DATABASE_HOST: postgres
      STAGEGATE_DATABASE_PORT: "5432"
      STAGEGATE_DATABASE_READYPORT: "5432"
      STAGEGATE_PROXYSETUP_READYPORT: "54325"
      STAGEGATE_READY_TORUNPORT: "54329"
      STAGEGATE_REGISTRY_HOST: core-keeper
      STAGEGATE_REGISTRY_PORT: "59890"
      STAGEGATE_REGISTRY_READYPORT: "54324"
      STAGEGATE_SECRETSTORESETUP_HOST: security-secretstore-setup
      STAGEGATE_SECRETSTORESETUP_TOKENS_READYPORT: "54322"
      STAGEGATE_WAITFOR_TIMEOUT: 60s
    hostname: security-proxy-setup
    image: domain:5000/edgexfoundry/security-proxy-setup:4.0.0
    networks:
      edgex-network: null
    read_only: true
    restart: always
    security_opt:
      - no-new-privileges:true
    user: root:root
    volumes:
      - type: bind
        source: /etc/localtime
        target: /etc/localtime
        read_only: true
        bind:
          create_host_path: true
      - type: volume
        source: edgex-init
        target: /edgex-init
        read_only: true
        volume: {}
      - type: volume
        source: secret-store-config
        target: /openbao/config
        volume: {}
      - type: volume
        source: nginx-templates
        target: /etc/nginx/templates
        volume: {}
      - type: volume
        source: nginx-tls
        target: /etc/ssl/nginx
        volume: {}
      - type: bind
        source: /tmp/edgex/secrets/security-proxy-setup
        target: /tmp/edgex/secrets/security-proxy-setup
        read_only: true
        bind:
          selinux: z
          create_host_path: true
  security-secretstore-setup:
    container_name: security-secretstore-setup
    depends_on:
      secret-store:
        condition: service_started
        required: true
      security-bootstrapper:
        condition: service_started
        required: true
    environment:
      CLIENTS_SECURITY_SECRETSTORE_SETUP_HOST: security-secretstore-setup
      EDGEX_ADD_KNOWN_SECRETS: postgres[app-rules-engine],message-bus[app-rules-engine],message-bus[device-rest],message-bus[device-virtual]
      EDGEX_ADD_SECRETSTORE_TOKENS: ""
      EDGEX_GROUP: "2001"
      EDGEX_SECURITY_SECRET_STORE: "true"
      EDGEX_USER: "2002"
      PROXY_SETUP_HOST: security-proxy-setup
      SECRETSTORE_HOST: secret-store
      SECUREMESSAGEBUS_TYPE: mqtt
      SERVICE_HOST: security-secretstore-setup
      STAGEGATE_BOOTSTRAPPER_HOST: security-bootstrapper
      STAGEGATE_BOOTSTRAPPER_STARTPORT: "54321"
      STAGEGATE_DATABASE_HOST: postgres
      STAGEGATE_DATABASE_PORT: "5432"
      STAGEGATE_DATABASE_READYPORT: "5432"
      STAGEGATE_PROXYSETUP_READYPORT: "54325"
      STAGEGATE_READY_TORUNPORT: "54329"
      STAGEGATE_REGISTRY_HOST: core-keeper
      STAGEGATE_REGISTRY_PORT: "59890"
      STAGEGATE_REGISTRY_READYPORT: "54324"
      STAGEGATE_SECRETSTORESETUP_HOST: security-secretstore-setup
      STAGEGATE_SECRETSTORESETUP_TOKENS_READYPORT: "54322"
      STAGEGATE_WAITFOR_TIMEOUT: 60s
    hostname: security-secretstore-setup
    image: domain:5000/edgexfoundry/security-secretstore-setup:4.0.0
    networks:
      edgex-network: null
    read_only: true
    restart: always
    security_opt:
      - no-new-privileges:true
    tmpfs:
      - /run
      - /openbao
    user: root:root
    volumes:
      - type: bind
        source: /etc/localtime
        target: /etc/localtime
        read_only: true
        bind:
          create_host_path: true
      - type: volume
        source: edgex-init
        target: /edgex-init
        read_only: true
        volume: {}
      - type: volume
        source: secret-store-config
        target: /openbao/config
        volume: {}
      - type: bind
        source: /tmp/edgex/secrets
        target: /tmp/edgex/secrets
        bind:
          selinux: z
          create_host_path: true
  ui:
    command:
      - ./edgex-ui-server
      - --configDir=res/docker
    container_name: edgex-ui-go
    depends_on:
      security-bootstrapper:
        condition: service_started
        required: true
      security-secretstore-setup:
        condition: service_started
        required: true
    entrypoint:
      - /edgex-init/ready_to_run_wait_install.sh
    environment:
      CLIENTS_SECURITY_SECRETSTORE_SETUP_HOST: security-secretstore-setup
      EDGEX_SECURITY_SECRET_STORE: "true"
      PROXY_SETUP_HOST: security-proxy-setup
      SECRETSTORE_HOST: secret-store
      SERVICE_HOST: edgex-ui-go
      STAGEGATE_BOOTSTRAPPER_HOST: security-bootstrapper
      STAGEGATE_BOOTSTRAPPER_STARTPORT: "54321"
      STAGEGATE_DATABASE_HOST: postgres
      STAGEGATE_DATABASE_PORT: "5432"
      STAGEGATE_DATABASE_READYPORT: "5432"
      STAGEGATE_PROXYSETUP_READYPORT: "54325"
      STAGEGATE_READY_TORUNPORT: "54329"
      STAGEGATE_REGISTRY_HOST: core-keeper
      STAGEGATE_REGISTRY_PORT: "59890"
      STAGEGATE_REGISTRY_READYPORT: "54324"
      STAGEGATE_SECRETSTORESETUP_HOST: security-secretstore-setup
      STAGEGATE_SECRETSTORESETUP_TOKENS_READYPORT: "54322"
      STAGEGATE_WAITFOR_TIMEOUT: 60s
    hostname: edgex-ui-go
    image: domain:5000/edgexfoundry/edgex-ui:4.0.0
    networks:
      edgex-network: null
    ports:
      - mode: ingress
        target: 4000
        published: "4000"
        protocol: tcp
    read_only: true
    restart: always
    security_opt:
      - no-new-privileges:true
    user: 2002:2001
    volumes:
      - type: bind
        source: /etc/localtime
        target: /etc/localtime
        read_only: true
        bind:
          create_host_path: true
      - type: volume
        source: edgex-init
        target: /edgex-init
        read_only: true
        volume: {}
      - type: bind
        source: /tmp/edgex/secrets/ui
        target: /tmp/edgex/secrets/ui
        read_only: true
        bind:
          selinux: z
          create_host_path: true
networks:
  edgex-network:
    name: edgex_edgex-network
    driver: bridge
volumes:
  db-data:
    name: edgex_db-data
  edgex-init:
    name: edgex_edgex-init
  mqtt:
    name: edgex_mqtt
  nginx-templates:
    name: edgex_nginx-templates
  nginx-tls:
    name: edgex_nginx-tls
  secret-store-config:
    name: edgex_secret-store-config
  secret-store-file:
    name: edgex_secret-store-file
  secret-store-logs:
    name: edgex_secret-store-logs
