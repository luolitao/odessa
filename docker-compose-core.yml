name: edgex
services:
  core-common-config-bootstrapper:
    command:
      - /core-common-config-bootstrapper
      - --registry
      - -cp=keeper.http://edgex-core-keeper:59890
    container_name: edgex-core-common-config-bootstrapper
    depends_on:
      core-keeper:
        condition: service_started
        required: true
    environment:
      ALL_SERVICES_DATABASE_HOST: database
      ALL_SERVICES_MESSAGEBUS_HOST: mqtt-broker
      ALL_SERVICES_REGISTRY_HOST: core-keeper
      APP_SERVICES_CLIENTS_CORE_METADATA_HOST: edgex-core-metadata
      DEVICE_SERVICES_CLIENTS_CORE_METADATA_HOST: edgex-core-metadata
      EDGEX_SECURITY_SECRET_STORE: "false"
    hostname: edgex-core-common-config-bootstrapper
    image: domain:5000/edgexfoundry/core-common-config-bootstrapper:4.0.0
    networks:
      edgex-network: null
    read_only: true
    security_opt:
      - no-new-privileges:true
    user: 2002:2001
    volumes:
      - type: bind
        source: /etc/localtime
        target: /etc/localtime
        read_only: true
        bind:
          create_host_path: true
  core-keeper:
    container_name: edgex-core-keeper
    depends_on:
      database:
        condition: service_started
        required: true
    environment:
      DATABASE_HOST: database
      EDGEX_SECURITY_SECRET_STORE: "false"
      MESSAGEBUS_AUTHMODE: none
      MESSAGEBUS_HOST: mqtt-broker
      MESSAGEBUS_PORT: "1883"
      MESSAGEBUS_PROTOCOL: tcp
      MESSAGEBUS_SECRETNAME: ""
      MESSAGEBUS_TYPE: mqtt
      SERVICE_HOST: edgex-core-keeper
    hostname: edgex-core-keeper
    image: domain:5000/edgexfoundry/core-keeper:4.0.0
    networks:
      edgex-network: null
    ports:
      - mode: ingress
        host_ip: 127.0.0.1
        target: 59890
        published: "59890"
        protocol: tcp
    read_only: true
    restart: always
    security_opt:
      - no-new-privileges:true
    user: 2002:2001
    volumes:
      - type: bind
        source: /etc/localtime
        target: /etc/localtime
        read_only: true
        bind:
          create_host_path: true
  core-metadata:
    command:
      - --registry
      - -cp=keeper.http://edgex-core-keeper:59890
    container_name: edgex-core-metadata
    depends_on:
      core-keeper:
        condition: service_started
        required: true
      database:
        condition: service_started
        required: true
    environment:
      EDGEX_SECURITY_SECRET_STORE: "false"
      SERVICE_HOST: edgex-core-metadata
    hostname: edgex-core-metadata
    image: domain:5000/edgexfoundry/core-metadata:4.0.0
    networks:
      edgex-network: null
    ports:
      - mode: ingress
        host_ip: 127.0.0.1
        target: 59881
        published: "59881"
        protocol: tcp
    read_only: true
    restart: always
    security_opt:
      - no-new-privileges:true
    user: 2002:2001
    volumes:
      - type: bind
        source: /etc/localtime
        target: /etc/localtime
        read_only: true
        bind:
          create_host_path: true
  database:
    container_name: edgex-postgres
    environment:
      POSTGRES_DB: edgex_db
      POSTGRES_PASSWORD: postgres
    hostname: edgex-postgres
    image: domain:5000/postgres:16.3-alpine3.20
    networks:
      edgex-network: null
    ports:
      - mode: ingress
        host_ip: 127.0.0.1
        target: 5432
        published: "5432"
        protocol: tcp
    read_only: true
    restart: always
    security_opt:
      - no-new-privileges:true
    tmpfs:
      - /run
    volumes:
      - type: bind
        source: /etc/localtime
        target: /etc/localtime
        read_only: true
        bind:
          create_host_path: true
      - type: volume
        source: db-data
        target: /var/lib/postgresql/data
        volume: {}
  mqtt-broker:
    command:
      - /usr/sbin/mosquitto
      - -c
      - /mosquitto-no-auth.conf
    container_name: edgex-mqtt-broker
    hostname: edgex-mqtt-broker
    image: domain:5000/eclipse-mosquitto:2.0.21
    networks:
      edgex-network: null
    ports:
      - mode: ingress
        host_ip: 127.0.0.1
        target: 1883
        published: "1883"
        protocol: tcp
    read_only: true
    restart: always
    security_opt:
      - no-new-privileges:true
    user: 2002:2001
  rules-engine:
    container_name: edgex-kuiper
    depends_on:
      database:
        condition: service_started
        required: true
      mqtt-broker:
        condition: service_started
        required: true
    environment:
      CONNECTION__EDGEX__MQTTMSGBUS__OPTIONAL__CLIENTID: kuiper-rules-engine
      CONNECTION__EDGEX__MQTTMSGBUS__OPTIONAL__KEEPALIVE: "500"
      CONNECTION__EDGEX__MQTTMSGBUS__PORT: "1883"
      CONNECTION__EDGEX__MQTTMSGBUS__PROTOCOL: tcp
      CONNECTION__EDGEX__MQTTMSGBUS__SERVER: mqtt-broker
      CONNECTION__EDGEX__MQTTMSGBUS__TYPE: mqtt
      EDGEX__DEFAULT__OPTIONAL__CLIENTID: kuiper-rules-engine
      EDGEX__DEFAULT__OPTIONAL__KEEPALIVE: "500"
      EDGEX__DEFAULT__PORT: "1883"
      EDGEX__DEFAULT__PROTOCOL: tcp
      EDGEX__DEFAULT__SERVER: mqtt-broker
      EDGEX__DEFAULT__TOPIC: edgex/rules-events
      EDGEX__DEFAULT__TYPE: mqtt
      KUIPER__BASIC__CONSOLELOG: "true"
      KUIPER__BASIC__ENABLEOPENZITI: "false"
      KUIPER__BASIC__RESTPORT: "59720"
    hostname: edgex-kuiper
    image: domain:5000/lfedge/ekuiper:2.1-alpine
    networks:
      edgex-network: null
    ports:
      - mode: ingress
        host_ip: 127.0.0.1
        target: 59720
        published: "59720"
        protocol: tcp
    read_only: true
    restart: always
    security_opt:
      - no-new-privileges:true
    user: 2002:2001
    volumes:
      - type: bind
        source: /etc/localtime
        target: /etc/localtime
        read_only: true
        bind:
          create_host_path: true
  ui:
    container_name: edgex-ui-go
    environment:
      EDGEX_SECURITY_SECRET_STORE: "false"
      SERVICE_HOST: edgex-ui-go
    hostname: edgex-ui-go
    image: domain:5000/edgexfoundry/edgex-ui:4.0.0
    networks:
      edgex-network: null
    ports:
      - mode: ingress
        target: 4000
        published: "4000"
        protocol: tcp
    read_only: true
    restart: always
    security_opt:
      - no-new-privileges:true
    user: 2002:2001
    volumes:
      - type: bind
        source: /etc/localtime
        target: /etc/localtime
        read_only: true
        bind:
          create_host_path: true
networks:
  edgex-network:
    name: edgex_edgex-network
    driver: bridge
volumes:
  db-data:
    name: edgex_db-data
